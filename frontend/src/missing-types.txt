(
()
(data
(dateRange
(discountedTotal
(error
(id
(item
(locationId
(user
0
0,
1
1,
2
2,
3,
345,
4
400,
6,
ABTest)
Challenge)
CustomerMetrics
Date
Discount[]
DropOffLocation)
DropResult)
Error)
Error,
ErrorInfo)
FC<LayoutProps>
InventoryItem[]
Item
KeyboardEvent<HTMLDivElement>)
Location
Location)
LocationUpdateData)
Location[]
LoginFormInputs)
LoyaltyChallenge
LoyaltyReward)
LoyaltyTier
MenuItem)
MenuItem,
Modifier[]
Number(feeAmount),
Omit<CorePOSProfile,
Omit<Discount,
Omit<ServiceFee,
POSProfile)
Partial<CorePOSProfile>
Partial<LoyaltyChallenge>
Provider)
React
ReactNode
RevenueData[]
RootState)
SalesByCategory)
SelectChangeEvent<ChallengeType>)
State
SubmitHandler<LoginFormInputs>
Theme
UserRole[]
[
[Dayjs,
[]
[],
[number,
[string,
[updatedGroup]
activeMenu
any
any)
any,
boolean
boolean)
branding
challenge
clientId
data
defaultPosition
discountName,
e
editingCampaign
event
false,
feeName,
formData
formattedEndDate
formattedStartDate,
getAlertSeverity(alert
item
keyof
loc
location
name
new
newGroupName
newGroups,
newItemDescription,
newItemName,
newStatus
newTiers
null}
number
number)
number,
parseFloat(discountValue
parseFloat(e
parseFloat(minPurchaseAmount),
parseFloat(newItemPrice),
parseFloat(value),
parseInt(e
parseInt(maxUses,
string
string)
string,
true
true,
undefined
unknown
updatedItems
updatedLocation
updatedMenu
value
value,
{
{JSON
{alert
{challenge
{currentMetric[1]}
{currentProgress}
{error}
{error}<
{fee
{guestProfile
{item
{lastSyncTime
{location
{new
{posProfiles
{selectedLocation
